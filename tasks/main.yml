---
# Copyright (C) 2016-2021 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Install gdnsd packages
  ansible.builtin.apt:
    name: '{{ gdnsd__packages }}'
    state: present

- name: gdnsd configuration  # noqa name[casing]
  ansible.builtin.template:
    src: 'etc/gdnsd/config.j2'
    dest: '/etc/gdnsd/config'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - Restart gdnsd

- name: Generate serial
  ansible.builtin.set_fact:
    gdnsd__fact_zone_serial: '{{ ansible_date_time.epoch }}'
  run_once: True

- name: Include tasks for generating zone file
  ansible.builtin.include_tasks: zone.yml
  loop: '{{ gdnsd__zones
            if (gdnsd__zones | length) > 0
            else [ {"domain": ansible_domain,
                    "reverse_zone": gdnsd__default_reverse_zone} ] }}'
  loop_control:
    label: '{{ gdnsd__include_zone.domain
               if "domain" in gdnsd__include_zone.keys()
               else gdnsd__include_zone.reverse_zone }}'
    loop_var: gdnsd__include_zone

- name: Check configuration and zone files
  ansible.builtin.command: gdnsd -s checkconf  # noqa 301
  check_mode: no
  changed_when: False
  failed_when: False
  register: gdnsd__register_checkconf

- name: Show checkconf output
  ansible.builtin.debug:
    msg: '{{ gdnsd__register_checkconf.stdout_lines +
             gdnsd__register_checkconf.stderr_lines }}'
  failed_when:
    - gdnsd__register_checkconf.rc != 0
    - not ansible_check_mode

- name: Enable and start service
  ansible.builtin.service:
    name: 'gdnsd'
    enabled: True
    state: started
